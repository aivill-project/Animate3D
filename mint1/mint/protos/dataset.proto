/*Copyright 2021 Google LLC

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    https://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================*/
syntax = "proto2";

package mint.protos;

import "mint/protos/preprocessor.proto";

message Dataset {
  // Dataset name.
  optional string name = 1;

  // Path to the sstables.
  optional string data_files = 2;

  optional WindowType window_type = 3 [default = DEFAULT_WINDOW];

  // If the data_target_field is set, this is what will be parsed off of the
  // input data to be used as the target.
  optional string data_target_field = 4;

  // Params for creating BERT pretraining mask.
  optional bool create_bert_masks = 5 [default = false];

  enum BERTMaskType {
    DEFAULT_MASK = 0;
    CONTIGUOUS = 1;
  }
  optional BERTMaskType bert_mask_type = 6 [default = DEFAULT_MASK];

  // Data augmentation options.
  repeated Preprocessor data_augmentation_options = 7;

  // Window sampling
  // Flag for whether to do the window sampling
  // If this flag is set to false, then data_target_field must be set.
  optional bool sample_window = 8 [default = true];
  enum WindowType {
    DEFAULT_WINDOW = 0;
    BEGINNING = 1;
    CENTER = 2;
    RANDOM = 3;
  }

  // How many output categories are in the input data. Required when the
  // data_target_field is set.
  optional int32 target_num_categories = 9;

  repeated DataModality modality = 10;

  // Input length in seconds
  optional float input_length_sec = 11;
  // Target length in seconds
  optional float target_length_sec = 12;
  optional float target_shift_sec = 13;
  // Filter length in seconds
  optional float length_threshold_sec = 14 [default = 0];
}

message DataModality {
  oneof modality {
    GeneralModality general_modality = 2;
  }
}

message GeneralModality {
  optional string feature_name = 1;
  optional int32 dimension = 2;
  // How many data samples there are per second for this modality
  optional int32 sample_rate = 3;
  // Options for images.
  optional int32 resize = 4;
  optional int32 crop_size = 5;
}
